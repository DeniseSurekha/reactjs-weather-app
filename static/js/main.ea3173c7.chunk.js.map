{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","location","setLocation","display","setDisplay","url","className","value","onChange","event","target","onKeyPress","key","axios","get","then","response","catch","error","placeholder","type","name","main","temp","toFixed","weather","undefined","feels_like","humidity","wind","speed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNA4EeA,MAzEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAG,4DAAwDJ,EAAxD,0DAgBT,OACE,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBACEC,MAAON,EACPO,SAAU,SAAAC,GAAK,OAAIP,EAAYO,EAAMC,OAAOH,QAC5CI,WApBe,SAACF,GACJ,UAAdA,EAAMG,MACRC,IAAMC,IAAIT,GAAKU,MAAK,SAACC,GACnBZ,GAAW,GACXJ,EAAQgB,EAASjB,SAChBkB,OAAM,SAAUC,GACjBlB,EAAQ,IACRE,EAAY,IACZE,GAAW,MAEbF,EAAY,MAWRiB,YAAY,iBACZC,KAAK,WAET,sBAAKd,UAAU,YAAf,UAEJH,GAAY,sBAAKG,UAAU,YAAf,UACZ,wBACE,+DAGI,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,4BAAIP,EAAKsB,SAEX,qBAAKf,UAAU,OAAf,SACGP,EAAKuB,KAAO,+BAAKvB,EAAKuB,KAAKC,KAAKC,UAApB,WAAwC,OAEvD,qBAAKlB,UAAU,cAAf,SACGP,EAAK0B,QAAU,4BAAI1B,EAAK0B,QAAQ,GAAGH,OAAY,eAIrCI,IAAd3B,EAAKsB,MACJ,sBAAKf,UAAU,SAAf,UACE,sBAAKA,UAAU,QAAf,UACGP,EAAKuB,KAAO,oBAAGhB,UAAU,OAAb,UAAqBP,EAAKuB,KAAKK,WAAWH,UAA1C,WAA6D,KAC1E,8CAEF,sBAAKlB,UAAU,WAAf,UACGP,EAAKuB,KAAO,oBAAGhB,UAAU,OAAb,UAAqBP,EAAKuB,KAAKM,SAA/B,OAAgD,KAC7D,4CAEF,sBAAKtB,UAAU,OAAf,UACGP,EAAK8B,KAAO,oBAAGvB,UAAU,OAAb,UAAqBP,EAAK8B,KAAKC,MAAMN,UAArC,UAA0D,KACvE,wDCrDCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea3173c7.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\n\nfunction App() {\n  const [data, setData] = useState({})\n  const [location, setLocation] = useState('')\n  const [display, setDisplay] = useState(false)\n\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=imperial&appid=895284fb2d2c50a520ea537456963d9c`\n\n  const searchLocation = (event) => {\n    if (event.key === 'Enter') {\n      axios.get(url).then((response) => {\n        setDisplay(false);\n        setData(response.data)\n      }).catch(function (error) {\n        setData({});\n        setLocation('');\n        setDisplay(true);\n      });\n      setLocation('')\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"search\">\n        <input\n          value={location}\n          onChange={event => setLocation(event.target.value)}\n          onKeyPress={searchLocation}\n          placeholder='Enter Location'\n          type=\"text\" />\n      </div>\n      <div className=\"container\">\n      {\n  display &&  <div className=\"not-found\">\n  <div ></div>\n    <p>SORRY!!  LOCATION NOT FOUND</p>\n  </div>\n}\n        <div className=\"top\">\n          <div className=\"location\">\n            <p>{data.name}</p>\n          </div>\n          <div className=\"temp\">\n            {data.main ? <h1>{data.main.temp.toFixed()}°F</h1> : null}\n          </div>\n          <div className=\"description\">\n            {data.weather ? <p>{data.weather[0].main}</p> : null}\n          </div>\n        </div>\n\n        {data.name !== undefined &&\n          <div className=\"bottom\">\n            <div className=\"feels\">\n              {data.main ? <p className='bold'>{data.main.feels_like.toFixed()}°F</p> : null}\n              <p>Feels Like</p>\n            </div>\n            <div className=\"humidity\">\n              {data.main ? <p className='bold'>{data.main.humidity}%</p> : null}\n              <p>Humidity</p>\n            </div>\n            <div className=\"wind\">\n              {data.wind ? <p className='bold'>{data.wind.speed.toFixed()} MPH</p> : null}\n              <p>Wind Speed</p>\n            </div>\n          </div>\n        }\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}